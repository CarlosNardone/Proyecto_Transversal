/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vistas;

import accesoadatos.AlumnoData;
import accesoadatos.InscripcionData;
import accesoadatos.MateriaData;
import entidades.Alumno;
import entidades.Inscripcion;
import entidades.Materia;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;



public class CargaDeNotasView extends javax.swing.JInternalFrame {

    private List<Materia>listaM;
    private List<Alumno> listaA;
    private List<Inscripcion>listaI;
    
    private InscripcionData inscData;
    private MateriaData mData;
    private AlumnoData aData;
    private Materia materia;
    
    private DefaultTableModel modelo;
    
    public CargaDeNotasView() {
        initComponents();
        inscData = new InscripcionData();
        aData = new AlumnoData();
//        listaA = (ArrayList<Alumno>)aData.listarAlumnos();
        listaA = aData.listarAlumnos();
        listaI = inscData.obtenerInscripciones();
        modelo = new DefaultTableModel();
        
        mData = new MateriaData();
        materia = new Materia();
        cargarAlumnos();
        armarCabeceraTabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jCboxAlumno = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtCargadeNotas = new javax.swing.JTable();
        jbGuardarNota = new javax.swing.JButton();
        jbSalir = new javax.swing.JButton();

        jPanel1.setForeground(new java.awt.Color(102, 255, 102));

        jLabel1.setFont(new java.awt.Font("Dialog", 3, 14)); // NOI18N
        jLabel1.setText("Carga de Notas");

        jLabel2.setText("Seleccione un alumno:");

        jCboxAlumno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCboxAlumnoActionPerformed(evt);
            }
        });

        jtCargadeNotas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jtCargadeNotas);

        jbGuardarNota.setText("Guardar");
        jbGuardarNota.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbGuardarNotaActionPerformed(evt);
            }
        });

        jbSalir.setText("Salir");
        jbSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 29, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(81, 81, 81)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(jCboxAlumno, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(186, 186, 186)
                        .addComponent(jLabel1)))
                .addContainerGap(76, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(74, 74, 74)
                .addComponent(jbGuardarNota)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbSalir)
                .addGap(114, 114, 114))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jCboxAlumno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(65, 65, 65)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbGuardarNota)
                    .addComponent(jbSalir))
                .addContainerGap(182, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalirActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jbSalirActionPerformed

    private void jCboxAlumnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCboxAlumnoActionPerformed
        borrarFilaTabla();
        cargarDatosNotasMaterias();
    }//GEN-LAST:event_jCboxAlumnoActionPerformed

    private void jbGuardarNotaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbGuardarNotaActionPerformed
        //borrarFilaTabla();
        int filaSeleccionada = jtCargadeNotas.getSelectedRow();
        if (filaSeleccionada != -1) {
        Alumno a = (Alumno) jCboxAlumno.getSelectedItem();
        int idMateria = (Integer) modelo.getValueAt(filaSeleccionada, 0);
        String notaString = (String) modelo.getValueAt(filaSeleccionada, 2);
        int nota = Integer.parseInt(notaString);
//       int nota = (Integer) modelo.getValueAt(filaSeleccionada, 2);

       inscData.actualizarNota(a.getIdAlumno(), idMateria, nota);
       
        }else{
            JOptionPane.showMessageDialog(this, "Usted debe seleccionar una fila de la tabla");
        }
        
//        int filaSeleccionada = jtCargadeNotas.getSelectedRow();
//        if(filaSeleccionada != -1){
//            Alumno a = (Alumno)jCboxAlumno.getSelectedItem();
//            int idMateria =(Integer) modelo.getValueAt(filaSeleccionada, 0);
//            String nombreMateria = (String) modelo.getValueAt(filaSeleccionada, 1);
//            int nota = Integer.parseInt((String) modelo.getValueAt(filaSeleccionada, 2));
////            int nota = (Integer) modelo.getValueAt(filaSeleccionada, 2);
////            Materia m = new Materia(idMateria, nombreMateria, anio,true);
////            Materia m =new Materia(idMateria, nombreMateria);
////            Inscripcion i = new Inscripcion (a, m, 0);
//            
//            inscData.actualizarNota(idMateria, a.getIdAlumno(), nota);
//        }
        
    }//GEN-LAST:event_jbGuardarNotaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<Alumno> jCboxAlumno;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbGuardarNota;
    private javax.swing.JButton jbSalir;
    private javax.swing.JTable jtCargadeNotas;
    // End of variables declaration//GEN-END:variables
private void cargarAlumnos(){
         for(Alumno item:listaA){
             jCboxAlumno.addItem(item);
     } 
}
        private void armarCabeceraTabla(){
        ArrayList<Object> filaCabecera = new ArrayList<>();
        filaCabecera.add("Codigo");
        filaCabecera.add("Nombre");
        filaCabecera.add("Nota");
        for(Object it: filaCabecera){
            modelo.addColumn(it);
        }
        jtCargadeNotas.setModel(modelo);
        
}
        private void borrarFilaTabla(){
        int indice = modelo.getRowCount() -1;
        for(int i = indice;i>= 0; i--){
            modelo.removeRow(i);
        }
    }
    
        private void cargarDatosNotasMaterias(){
        //borrarFilasTablas();
        Alumno selec = (Alumno) jCboxAlumno.getSelectedItem();
        listaI = (ArrayList) inscData.obtenerInscripcionesPorAlumno(selec.getIdAlumno());
        for (Inscripcion inscripcion : listaI) {
        Materia materia = inscripcion.getMateria();
        int idMateria = materia.getIdMateria();
        String nombreMateria = materia.getNombre();
        int nota = inscripcion.getNota();
        modelo.addRow(new Object[]{idMateria, nombreMateria, nota});
//        for(Materia m: listaM){
//        modelo.addRow(new Object[]{m.getIdMateria(), m.getNombre(), m.getAnioMateria()});  
    }
    }






}

